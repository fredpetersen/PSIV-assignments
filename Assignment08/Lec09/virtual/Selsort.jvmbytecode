  public static void SelectionSort(int[]);
    descriptor: ([I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=1
         0: iconst_0            // push integer constant 0
         1: istore_1            // store local integer variable (int i = 0)

        // OUTER LOOP CONDITION
         2: iload_1             // load local integer variable (i)
         3: aload_0             // load local object variable (arr)
         4: arraylength         // get length of array
         5: if_icmpge     57    // jump to 57 if value1 is >= value 2 (exit loop if i >= arraylength)

         // ENTER OUTER LOOP BODY
         8: iload_1             // load local integer variable (i)
         9: istore_2            // store new local integer variable (int least)
        10: iload_1             // load local integer variable (i)
        11: iconst_1            // push integer constant 1 to stack
        12: iadd                // add two ints (i + 1)
        13: istore_3            // store integer variable (j = i+1)

        // INNER LOOP CONDITION
        14: iload_3             // load integer variable (j)
        15: aload_0             // load array (arr)
        16: arraylength         // get array length
        17: if_icmpge     37    // jump to 37 if value 1 >= value (if j >= arr.length)

        // ENTER INNER LOOP BODY
        20: aload_0             // load array
        21: iload_3             // load int variable (j)
        22: iaload              // load array element (arr[j])
        23: aload_0             // load array
        24: iload_2             // load int variable (least)
        25: iaload              // load array element (arr[least])
        26: if_icmpge     31    // jump to 31 if arr[j] >= arr[least]
        29: iload_3             // load int variable(j)
        30: istore_2            // store int variable (least = j)
        31: iinc          3, 1  // increment local variabel by 1 (j+1)
        34: goto          14    // Go to inner loop condition

        // SWITCH TWO VARIABLES
        37: aload_0             // Load array (arr)
        38: iload_1             // Load integer variable (i)
        39: iaload              // Load int from array (arr[i])
        40: istore_3            // Store integer in local variable (tmp = arr[i])
        41: aload_0             // Load array (arr)
        42: iload_1             // Load integer variable (i)
        43: aload_0             // Load array (arr)
        44: iload_2             // Load integer variable (least)
        45: iaload              // Load int from array (arr[least])
        46: iastore             // Store value of arr[least] in arr[i]
        47: aload_0             // Load array (arr)
        48: iload_2             // Load integer variable (least)
        49: iload_3             // Load integer variable (tmp)
        50: iastore             // Store value of tmp in arr[least]
        51: iinc          1, 1  // Increment integer variable i by one
        54: goto          2     // Go to outer loop condition

        57: return              // Return if outer loop condition is false (i > arr.length)


      LineNumberTable:
        line 21: 0
        line 22: 8
        line 23: 10
        line 24: 20
        line 25: 29
        line 23: 31
        line 26: 37
        line 21: 51
        line 28: 57